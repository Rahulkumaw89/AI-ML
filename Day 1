1.
Open In Colab
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))
#Importing relevant packages for the analysis.
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
filename = "/content/drive/MyDrive/ML_data/salary_data/Salary_Dataset_with_Extra_Features.csv"
salary= pd.read_csv(filename)
salary.head()
Rating	Company Name	Job Title	Salary	Salaries Reported	Location	Employment Status	Job Roles
0	3.8	Sasken	Android Developer	400000	3	Bangalore	Full Time	Android
1	4.5	Advanced Millennium Technologies	Android Developer	400000	3	Bangalore	Full Time	Android
2	4.0	Unacademy	Android Developer	1000000	3	Bangalore	Full Time	Android
3	3.8	SnapBizz Cloudtech	Android Developer	300000	3	Bangalore	Full Time	Android
4	4.4	Appoids Tech Solutions	Android Developer	600000	3	Bangalore	Full Time	Android
display(salary)
Rating	Company Name	Job Title	Salary	Salaries Reported	Location	Employment Status	Job Roles
0	3.8	Sasken	Android Developer	400000	3	Bangalore	Full Time	Android
1	4.5	Advanced Millennium Technologies	Android Developer	400000	3	Bangalore	Full Time	Android
2	4.0	Unacademy	Android Developer	1000000	3	Bangalore	Full Time	Android
3	3.8	SnapBizz Cloudtech	Android Developer	300000	3	Bangalore	Full Time	Android
4	4.4	Appoids Tech Solutions	Android Developer	600000	3	Bangalore	Full Time	Android
...	...	...	...	...	...	...	...	...
22765	4.7	Expert Solutions	Web Developer	200000	1	Bangalore	Full Time	Web
22766	4.0	Nextgen Innovation Labs	Web Developer	300000	1	Bangalore	Full Time	Web
22767	4.1	Fresher	Full Stack Web Developer	192000	13	Bangalore	Full Time	Web
22768	4.1	Accenture	Full Stack Web Developer	300000	7	Bangalore	Full Time	Web
22769	3.8	Thomson Reuters	Associate Web Developer	300000	7	Bangalore	Full Time	Web
22770 rows Ã— 8 columns

salary.info()
salary.duplicated().unique()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 22770 entries, 0 to 22769
Data columns (total 8 columns):
 #   Column             Non-Null Count  Dtype  
---  ------             --------------  -----  
 0   Rating             22770 non-null  float64
 1   Company Name       22770 non-null  object 
 2   Job Title          22770 non-null  object 
 3   Salary             22770 non-null  int64  
 4   Salaries Reported  22770 non-null  int64  
 5   Location           22770 non-null  object 
 6   Employment Status  22770 non-null  object 
 7   Job Roles          22770 non-null  object 
dtypes: float64(1), int64(2), object(5)
memory usage: 1.4+ MB
array([False])
salary.describe()
Rating	Salary	Salaries Reported
count	22770.000000	2.277000e+04	22770.000000
mean	3.918213	6.953872e+05	1.855775
std	0.519675	8.843990e+05	6.823668
min	1.000000	2.112000e+03	1.000000
25%	3.700000	3.000000e+05	1.000000
50%	3.900000	5.000000e+05	1.000000
75%	4.200000	9.000000e+05	1.000000
max	5.000000	9.000000e+07	361.000000
for column_name in salary.columns:
    unique_values = len(salary[column_name].unique())
    print(" Dataset has '{unique_values}' unique '{column_name}'".format(column_name = column_name,unique_values=unique_values))
 Dataset has '41' unique 'Rating'
 Dataset has '11261' unique 'Company Name'
 Dataset has '1080' unique 'Job Title'
 Dataset has '316' unique 'Salary'
 Dataset has '82' unique 'Salaries Reported'
 Dataset has '10' unique 'Location'
 Dataset has '4' unique 'Employment Status'
 Dataset has '11' unique 'Job Roles'
plt.figure(figsize = (30, 6))
plt.xticks(rotation = 85)
plt.ticklabel_format(style = 'plain')
salary.sort_values("Salary", axis = 0, ascending = False, inplace = True)
sns.barplot(x = salary["Company Name"][0:100], y = salary["Salary"][0:100], palette = "Spectral").set(title='Which Company pay the most?');

plt.figure(figsize = (32,8))
plt.xticks(rotation = 85)
plt.ticklabel_format(style = 'Plain')
salary.sort_values("Salary", axis = 0, ascending = False, inplace = True)
sns.scatterplot(data=salary, x=salary["Job Title"][1:100], y=salary["Salary"][:100],hue="Location", size='Rating', sizes=(10,200)).set(title='Job title vs Salary (Depending on Location and Ratings of top 100 Companies that pay the most)');
plt.legend(loc = "best")
plt.show()

plt.figure(figsize = (30,6))
plt.xticks(rotation = 85)
plt.ticklabel_format(style = 'Plain')
salary.sort_values("Salary", axis = 0, ascending = False, inplace = True)
sns.scatterplot(data=salary, x=salary["Job Title"][1:100], y=salary["Salary"],hue="Job Roles", size='Rating', sizes=(10,200)).set(title='Job title vs Salary (Depending on Job Roles and Ratings of top 100 Companies that may the most)');
plt.legend(loc = "best")
<matplotlib.legend.Legend at 0x7f785bc87fd0>


